import { useState, useEffect, useCallback } from 'react';
import { useForm, useFieldArray, Controller } from 'react-hook-form';
import { useNavigate, Link } from 'react-router-dom';
import { useAuth } from '@/hooks/useAuth';
import { createRecommendation } from '@/services/api/recommendations'; // Aseg√∫rate que la importaci√≥n sea nombrada
import { searchClients } from '@/services/api/clients';


export function RecommendationForm() {
    const navigate = useNavigate();
    const { user } = useAuth();
    const [clientSearch, setClientSearch] = useState('');
    const [searchResults, setSearchResults] = useState([]);
    const [isSearching, setIsSearching] = useState(false);

    const {
        register,
        control,
        handleSubmit,
        setValue,
        reset,
        formState: { errors, isSubmitting },
    } = useForm({
        defaultValues: {
            noHoja: '',
            datosAgricultor: {
                nombre: '',
                dni: '',
                direccion: '',
                adelanto: 0,
                distrito: '',
                provincia: '',
                departamento: '',
            },
            datosTecnico: {
                nombre: user?.displayName || 'Nombre del T√©cnico', // Idealmente vendr√≠a del perfil de Firebase
                email: user?.email || '',
                cip: '',
                telefono: '',
            },
            diagnostico: '',
            detallesProductos: [{ producto: '', cantidad: 1, formaUso: '' }],
            recomendaciones: ['', '', '', ''], // Para los 4 puntos de seguridad
            seguimiento: {
                fotoAntes: null,
                fotoDespues: null,
                observaciones: '',
            },
            estado: 'Pendiente',
        },
    });

    const { fields, append, remove } = useFieldArray({
        control,
        name: 'detallesProductos',
    });

    const onSubmit = async (data) => {
        try {
            // Aqu√≠ podr√≠as procesar la subida de im√°genes antes de guardar
            await createRecommendation(data);
            alert('Recomendaci√≥n guardada localmente con √©xito!');
            navigate('/'); // Volver a la p√°gina de consulta
        } catch (error) {
            alert('Hubo un error al guardar la recomendaci√≥n.');
            console.error(error);
        }
    };

    const handleClientSearch = useCallback(async (query) => {
        if (query.trim().length > 1) {
            setIsSearching(true);
            try {
                const results = await searchClients(query);
                setSearchResults(results);
            } catch (error) {
                console.error("Error searching for clients:", error);
                setSearchResults([]);
            } finally {
                setIsSearching(false);
            }
        } else {
            setSearchResults([]);
        }
    }, []);

    // Efecto para buscar clientes con debounce
    useEffect(() => {
        const debounceSearch = setTimeout(() => {
            handleClientSearch(clientSearch);
        }, 300);

        return () => clearTimeout(debounceSearch);
    }, [clientSearch, handleClientSearch]);

    const handleSelectClient = (client) => {
        // Usamos reset para rellenar el formulario, manteniendo los datos del t√©cnico
        reset({
            ...control._defaultValues,
            datosAgricultor: client,
        });
        // Limpiamos la b√∫squeda
        setClientSearch('');
        setSearchResults([]);
    };

    return (
        <div className="max-w-4xl p-4 mx-auto">
            <div className="bg-white rounded-xl shadow-lg overflow-hidden">
                {/* HEADER */}
                <div className="bg-gradient-to-r from-green-800 to-green-600 text-white p-6">
                    <div className="flex flex-col sm:flex-row justify-between items-center">
                        <div className="flex items-center mb-4 sm:mb-0">
                            <div className="text-5xl mr-4">üå±</div>
                            <div>
                                <h1 className="text-2xl font-bold text-shadow">AGRONEGOCIOS GRINGO</h1>
                                <p className="font-semibold">HOJA DE RECOMENDACI√ìN T√âCNICA</p>
                            </div>
                        </div>
                        <div className="text-right">
                            <div className="font-bold text-lg">üìû 992 431 355</div>
                            <div className="bg-white/25 px-3 py-1 rounded-full text-sm font-bold mt-1">
                                <input
                                    id="noHoja"
                                    placeholder="N¬∞ 001-..."
                                    {...register('noHoja', { required: 'El N¬∞ de hoja es obligatorio' })}
                                    className="bg-transparent text-white placeholder-white/70 text-center outline-none w-28"
                                />
                            </div>
                            {errors.noHoja && <p className="mt-1 text-xs text-yellow-300">{errors.noHoja.message}</p>}
                        </div>
                    </div>
                </div>

                {/* SEARCH SECTION */}
                <div className="bg-gray-50 p-6 border-b flex justify-between items-center">
                    <div className="relative flex-grow mr-4">
                        <h3 className="text-lg font-bold text-gray-700 mb-3">üîç B√∫squeda R√°pida de Cliente</h3>
                        <label htmlFor="clientSearch" className="block text-sm font-medium text-gray-700 sr-only">Buscar Cliente por DNI o Nombre</label>
                        <input
                            id="clientSearch"
                            type="text"
                            value={clientSearch}
                            onChange={(e) => setClientSearch(e.target.value)}
                            placeholder="Escribe DNI o nombre para buscar un cliente existente..."
                            className="w-full p-3 border-2 border-gray-200 rounded-lg shadow-sm transition focus:ring-green-500 focus:border-green-500"
                        />
                        {isSearching && <p className="absolute right-3 top-1/2 -translate-y-1/2 text-sm text-gray-500">Buscando...</p>}
                        {searchResults.length > 0 && (
                            <ul className="absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-auto">
                                {searchResults.map((client) => (
                                    <li
                                        key={client.dni}
                                        onClick={() => handleSelectClient(client)}
                                        className="px-4 py-3 cursor-pointer hover:bg-green-50 border-b last:border-b-0"
                                    >
                                        <p className="font-semibold text-gray-800">{client.nombre}</p>
                                        <p className="text-sm text-gray-600">{client.dni}</p>
                                    </li>
                                ))}
                            </ul>
                        )}
                    </div>
                    <Link
                        to="/"
                        className="self-end mb-1 whitespace-nowrap px-4 py-3 font-medium text-white rounded-md bg-primary-600 hover:bg-primary-700"
                    >
                        Ver Lista
                    </Link>
                </div>

                <form onSubmit={handleSubmit(onSubmit)} className="p-6 space-y-8">
                    {/* Datos del Agricultor */}
                    <section className="p-6 bg-gray-50 rounded-xl border-l-4 border-green-600 hover:shadow-md transition-shadow">
                        <h2 className="text-lg font-bold text-green-800 mb-4 flex items-center gap-2">üë®‚Äçüåæ Datos del Agricultor</h2>
                        <div className="grid grid-cols-1 gap-4 md:grid-cols-3">
                            <div className="md:col-span-2">
                                <label htmlFor="agricultorNombre" className="block text-sm font-medium text-gray-700">Nombre Completo</label>
                                <input
                                    id="agricultorNombre"
                                    {...register('datosAgricultor.nombre', { required: 'El nombre es obligatorio' })}
                                    className="w-full p-2 mt-1 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500"
                                />
                                {errors.datosAgricultor?.nombre && <p className="mt-1 text-sm text-red-600">{errors.datosAgricultor.nombre.message}</p>}
                            </div>
                            <div>
                                <label htmlFor="agricultorDni" className="block text-sm font-medium text-gray-700">DNI</label>
                                <input
                                    id="agricultorDni"
                                    {...register('datosAgricultor.dni', { required: 'El DNI es obligatorio', maxLength: 8 })}
                                    className="w-full p-2 mt-1 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500"
                                />
                                {errors.datosAgricultor?.dni && <p className="mt-1 text-sm text-red-600">{errors.datosAgricultor.dni.message}</p>}
                            </div>
                            <div className="md:col-span-3">
                                <label htmlFor="agricultorDireccion" className="block text-sm font-medium text-gray-700">Direcci√≥n</label>
                                <input
                                    id="agricultorDireccion"
                                    {...register('datosAgricultor.direccion')}
                                    className="w-full p-2 mt-1 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500"
                                />
                            </div>
                            <div>
                                <label htmlFor="agricultorDepartamento" className="block text-sm font-medium text-gray-700">Departamento</label>
                                <input id="agricultorDepartamento" {...register('datosAgricultor.departamento')} className="w-full p-2 mt-1 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500" />
                            </div>
                            <div>
                                <label htmlFor="agricultorProvincia" className="block text-sm font-medium text-gray-700">Provincia</label>
                                <input id="agricultorProvincia" {...register('datosAgricultor.provincia')} className="w-full p-2 mt-1 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500" />
                            </div>
                            <div>
                                <label htmlFor="agricultorDistrito" className="block text-sm font-medium text-gray-700">Distrito</label>
                                <input id="agricultorDistrito" {...register('datosAgricultor.distrito')} className="w-full p-2 mt-1 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500" />
                            </div>
                        </div>
                    </section>

                    {/* Datos de la Hoja y T√©cnico */}
                    <section className="p-6 bg-gray-50 rounded-xl border-l-4 border-green-600 hover:shadow-md transition-shadow">
                        <h2 className="text-lg font-bold text-green-800 mb-4 flex items-center gap-2">üßë‚Äçüî¨ Representante T√©cnico</h2>
                        <div className="grid grid-cols-1 gap-4 md:grid-cols-3">
                            <div>
                                <label htmlFor="tecnicoNombre" className="block text-sm font-medium text-gray-700">Nombre del T√©cnico</label>
                                <input id="tecnicoNombre" {...register('datosTecnico.nombre')} className="w-full p-2 mt-1 bg-gray-200 border-gray-300 rounded-md shadow-sm cursor-not-allowed" readOnly />
                            </div>
                            <div className="md:col-span-2">
                                <label htmlFor="tecnicoEmail" className="block text-sm font-medium text-gray-700">Email del T√©cnico</label>
                                <input id="tecnicoEmail" {...register('datosTecnico.email')} className="w-full p-2 mt-1 bg-gray-200 border-gray-300 rounded-md shadow-sm cursor-not-allowed" readOnly />
                            </div>
                            <div>
                                <label htmlFor="tecnicoCip" className="block text-sm font-medium text-gray-700">CIP</label>
                                <input id="tecnicoCip" {...register('datosTecnico.cip')} className="w-full p-2 mt-1 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500" />
                            </div>
                            <div>
                                <label htmlFor="tecnicoTelefono" className="block text-sm font-medium text-gray-700">Tel√©fono</label>
                                <input id="tecnicoTelefono" {...register('datosTecnico.telefono')} className="w-full p-2 mt-1 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500" />
                            </div>
                        </div>
                    </section>

                    {/* Diagn√≥stico */}
                    <section className="p-6 bg-gray-50 rounded-xl border-l-4 border-green-600 hover:shadow-md transition-shadow">
                        <h2 className="text-lg font-bold text-green-800 mb-4 flex items-center gap-2">üî¨ Diagn√≥stico en Cultivo</h2>
                        <textarea
                            {...register('diagnostico', { required: 'El diagn√≥stico es obligatorio' })}
                            rows="4"
                            className="w-full p-2 mt-1 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500"
                            placeholder="Describe el problema, plaga o enfermedad encontrada en el cultivo..."
                        ></textarea>
                        {errors.diagnostico && <p className="mt-1 text-sm text-red-600">{errors.diagnostico.message}</p>}
                        <div className="mt-4">
                            <label className="block text-sm font-medium text-gray-700">Foto del Cultivo (Antes)</label>
                            <input type="file" accept="image/*" {...register('seguimiento.fotoAntes')} className="w-full mt-1 text-sm file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-green-50 file:text-green-700 hover:file:bg-green-100" />
                            <p className="mt-1 text-xs text-gray-500">Esta foto se guardar√° para el seguimiento.</p>
                        </div>
                    </section>

                    {/* Detalles de Productos */}
                    <section className="p-0 bg-gray-50 rounded-xl border-l-4 border-green-600 hover:shadow-md transition-shadow overflow-hidden">
                        <div className="bg-green-800 text-white p-4 flex justify-between items-center">
                            <h2 className="text-lg font-bold flex items-center gap-2">üì¶ Productos Recomendados</h2>
                            <button
                                type="button"
                                onClick={() => append({ producto: '', cantidad: 1, formaUso: '' })}
                                className="bg-white text-green-800 font-bold py-1 px-3 rounded-full text-sm hover:bg-green-100 transition"
                            >
                                + Agregar
                            </button>
                        </div>
                        <table className="w-full">
                            <thead className="bg-gray-100">
                                <tr>
                                    <th className="p-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider w-2/5">Producto</th>
                                    <th className="p-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider w-1/5">Cantidad</th>
                                    <th className="p-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider w-2/5">Forma de Uso</th>
                                    <th className="p-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider"></th>
                                </tr>
                            </thead>
                            <tbody>
                                {fields.map((field, index) => (
                                    <tr key={field.id} className="border-b last:border-0">
                                        <td className="p-2">
                                            <input
                                                {...register(`detallesProductos.${index}.producto`, { required: true })}
                                                className="w-full p-2 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500"
                                                placeholder="Nombre del producto"
                                            />
                                        </td>
                                        <td className="p-2">
                                            <input
                                                type="number"
                                                step="0.1"
                                                {...register(`detallesProductos.${index}.cantidad`, { required: true, valueAsNumber: true, min: { value: 0.1, message: 'Debe ser > 0' } })}
                                                className="w-full p-2 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500"
                                            />
                                        </td>
                                        <td className="p-2">
                                            <input
                                                {...register(`detallesProductos.${index}.formaUso`)}
                                                className="w-full p-2 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500"
                                                placeholder="Instrucciones"
                                            />
                                        </td>
                                        <td className="p-2 text-center">
                                            <button type="button" onClick={() => remove(index)} className="text-red-500 hover:text-red-700 font-bold text-xl">
                                                &times;
                                            </button>
                                        </td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    </section>

                    {/* Recomendaciones de Seguridad */}
                    <section className="p-6 bg-green-50 rounded-xl border-2 border-green-200">
                        <h2 className="text-lg font-bold text-green-800 mb-4 flex items-center gap-2">üí° Recomendaciones de Seguridad</h2>
                        <div className="space-y-2">
                            {['', '', '', ''].map((_, index) => (
                                <input
                                    key={index}
                                    {...register(`recomendaciones.${index}`)}
                                    className="w-full p-2 mt-1 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500"
                                    placeholder={`Recomendaci√≥n de seguridad ${index + 1}`}
                                />
                            ))}
                        </div>
                    </section>

                    {/* Seguimiento Inicial y Firmas */}
                    <section className="p-6 bg-gray-50 rounded-xl border-l-4 border-green-600 hover:shadow-md transition-shadow">
                        <h2 className="text-lg font-bold text-green-800 mb-4 flex items-center gap-2">‚úçÔ∏è Evidencia y Firmas</h2>
                        <div className="grid grid-cols-1 gap-6 md:grid-cols-2">
                            <div>
                                <label className="block text-sm font-medium text-gray-700">Adelanto (S/.)</label>
                                <input type="number" step="0.01" {...register('datosAgricultor.adelanto', { valueAsNumber: true })} className="w-full p-2 mt-1 border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500" />
                            </div>
                            {/* Placeholder para las firmas. Reemplazar con un componente de firma. */}
                            <div className="p-4 text-center border-2 border-dashed rounded-lg bg-white">
                                <p className="text-sm text-gray-500">Espacio para Firma del Agricultor</p>
                            </div>
                            <div className="p-4 text-center border-2 border-dashed rounded-lg bg-white">
                                <p className="text-sm text-gray-500">Espacio para Firma del T√©cnico</p>
                            </div>
                        </div>
                    </section>

                    {/* Bot√≥n de Guardar */}
                    <div className="flex justify-end">
                        <button
                            type="submit"
                            disabled={isSubmitting}
                            className="btn btn-save flex items-center justify-center gap-2 px-8 py-3 text-lg font-bold text-white rounded-lg bg-gradient-to-r from-green-600 to-teal-600 hover:from-green-700 hover:to-teal-700 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all disabled:bg-gray-400 disabled:shadow-none disabled:transform-none"
                        >
                            üíæ
                            <span>{isSubmitting ? 'Guardando...' : 'Guardar Hoja'}</span>
                        </button>
                    </div>
                </form></div>
        </div>
    );
}